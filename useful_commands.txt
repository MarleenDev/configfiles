[system]
show labels of disks etc:
    lsblk -o name,mountpoint,label,size,uuid

[kernel debugging]
    mount -t debugfs none /sys/kernel/debug

    sysctl kernel.printk
    cat /sys/kernel/debug/dynamic_debug/control
    awk '$3 != "=_"' /sys/kernel/debug/dynamic_debug/control
    echo 'module bluetooth +pflmt' > /sys/kernel/debug/dynamic_debug/control

    cat /sys/kernel/debug/kmemleak
    echo scan > /sys/kernel/debug/kmemleak
    echo clear > /sys/kernel/debug/kmemleak

[git worktree]
    git worktree add -b emergency-fix ../temp master
    pushd ../temp
    # ... hack hack hack ...
    git commit -a -m 'emergency fix for boss'
    popd
    git worktree remove ../temp

[git]
get commits from other repo:
    git remote add other https://example.link/repository.git
    git fetch other
    ... cherry pick from other
    git remote remove other

[buildroot]
    cat buildroot/output/build/linux-6.5/.applied_patches_list
    make SOMEMODULE-reconfigure world
local.mk
patches: package/board/external dir

[bluetooth]
    modprobe hci_vhci  -->  /dev/vhci

[esp]
    idf.py set-target esp32c6
    idf.py menuconfig
    idf.py build
    idf.py flash
    idf.py -p PORT flash
    idf.py -p <PORT> monitor       (exit with CTRL])
    idf.py -p PORT erase-flash
    idf.py -p PORT erase-otadata

[pdftk]
For rotating clockwise:
    pdftk input.pdf cat 1-endeast output output.pdf
For rotating anti-clockwise:
    pdftk input.pdf cat 1-endwest output output.pdf

[esp-idk]
steps to do when changing version:
    git checkout SOMETAG
    git submodule sync --recursive
    /home/marleenvos/dev/repos/esp/esp-idf/install.sh

[matter]
when stuck resolving dependencies:
    rm -rf ~/.cache/Espressif/ComponentManager

[prplos]
configure:
    ./scripts/gen_config.py ipq40xx prpl
get installed version from terminal prompt:
    ubus call system board
interactive config shell:
    ubus-cli
start dhcp client:
    udhcpc -i eth1

[ctags]
    ctags --map-C++=+'(*.ino)' -R .

[tftp]
    sudo apt-get install tftp tftpd xinetd
    cd /etc/xinetd.d/
    sudo vim /etc/xinetd.d/tftp
>>>
service tftp
{
protocol        = udp
port            = 69
socket_type     = dgram
wait            = yes
user            = nobody
server          = /usr/sbin/in.tftpd
server_args     = /tftpboot
disable         = no
}
<<<
    sudo mkdir /tftpboot
    sudo chmod -R 777 /tftpboot
    sudo chown -R nobody /tftpboot
    sudo service xinetd status

[gl-inet tftpboot]
Here's how to flash the GL-inet over the bootloader:
Start tftp server on Laptop with your image (openwrt-ipq40xx-generic-glinet_gl-b1300-squashfs-sysupgrade.bin)
<boot glinet>
In serial console press "gl<enter>" to stop bootloader
Set device/serverIP in the bootloader:
#
setenv serverip <laptop IP>
setenv ipaddr <device IP>
(setenv netmask <>) #optional if same subnet
(setenv gatewayip <> ) # optional if same subnet
saveenv
# Flash device (tftp server should be running on the laptop, and reachable from the device):
tftpboot 0x84000000 openwrt-ipq40xx-generic-glinet_gl-b1300-squashfs-sysupgrade.bin
# <transfer should succeed>
# Flashing the image
sf probe && sf erase 0x180000 0x1e80000 && sf write 0x84000000 0x180000 $filesize
# reboot device on new image
reset

[openwrt]
    uci show wireless
    uci set wireless.radio0.country='BE'
    uci set wireless.radio1.country='BE'
    uci set wireless.radio0.disabled='0'
    uci set wireless.radio1.disabled='0'
    uci set wireless.radio0.log_level='1'
    uci set wireless.radio1.log_level='1'
    uci set wireless.radio0.encryption=psk2
    uci set wireless.radio1.encryption=psk2
    uci set wireless.radio0.key="your_password"
    uci set wireless.radio1.key="your_password"
    uci commit wireless
    wifi reload

[swap]
    swapoff /swapfile
    fallocate -l 16G /swapfile
    mkswap /swapfile
    swapon /swapfile

[network]
    sudo systemctl status systemd-networkd
    sudo systemctl start systemd-networkd
    sudo systemctl stop systemd-networkd
    sudo systemctl restart systemd-networkd

[dns]
    sudo systemctl status systemd-resolved.service
    sudo systemctl start systemd-resolved.service
    sudo systemctl stop systemd-resolved.service
    sudo systemctl restart systemd-resolved.service

[tmux]
new session:
    tmux new
default prefix:
    C-b
list of keys:
    C-b ?

[python]
create virtual environment:
    python -m venv .venv
    source .venv/bin/activate

[vim]
save a session named Session.vim:
    :mks!
load session:
    :so Session.vim

[bash]
uppercase next word: ALT-u
lowercase next word: ALT-l
capitalize next word: ALT-c
delete next word: ALT-d
delete prev word: ALT-BACKSPACE  or CTRL-w
kill whitespace: ALT-\
tilde expand: ALT-&

[FORT Robotics]
NSCP:
    repo: safety-cert-nscp/develop
    build:
        PLATFORM=nscp DEBUG=1 Build=Debug make -f conan.mk clean build
        SKIPLINT=1 PLATFORM=nscp DEBUG=1 Build=Debug make -f conan.mk build
    test:
        ceedling options:nscp test:all
SRCP:
    repo: safety-cert-epc/develop
    build:
        PLATFORM=srcpd1 DEBUG=1 Build=Debug make -f conan.mk clean build
        SKIPLINT=1 PLATFORM=srcpd1 DEBUG=1 Build=Debug make -f conan.mk build
    test:
        ceedling options:srcp test:all

